{"version":3,"sources":["HelloWorld.js","MessageList.js","MessageForm.js","MessageContainer.js","App.js","reportWebVitals.js","index.js"],"names":["HelloWorld","props","state","greeting","frenchify","bind","this","setState","className","name","onClick","Component","data","dataList","map","d","console","log","MessageForm","handleSubmit","event","value","input","onSubmit","preventDefault","type","ref","React","MessageContainer","message","mqtt","publish","MessageList","addMessage","subscribe","topic","_MessageContainer","App","mqttProps","src","ratio","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2SA2BeA,G,wDAtBX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CAACC,SAAU,SACxB,EAAKC,UAAY,EAAKA,UAAUC,KAAf,gBAHF,E,wDAQfC,KAAKC,SAAS,CAAEJ,SAAU,c,+BAIzB,OACA,sBAAKK,UAAU,aAAf,UACIF,KAAKJ,MAAMC,SADf,IAC0BG,KAAKL,MAAMQ,KADrC,IAEG,uBACA,wBAAQC,QAASJ,KAAKF,UAAtB,+B,GAlBaO,c,yBCDV,cAAa,IAAXC,EAAU,EAAVA,KACTC,EAAWD,EAAKE,KAAI,SAACC,GAAD,OAAO,6BAAKA,OAEtC,OADAC,QAAQC,IAAIL,GAEV,gCACE,0CACA,6BACGC,QCRYK,E,kDACnB,WAAYjB,GAAQ,IAAD,8BACjB,cAAMA,IACDkB,aAAe,EAAKA,aAAad,KAAlB,gBAFH,E,yDAKNe,GACX,IAAMC,EAAQf,KAAKgB,MAAMD,MACzBf,KAAKL,MAAMsB,SAASF,GACpBD,EAAMI,mB,+BAGE,IAAD,OACP,OACE,uBAAMD,SAAUjB,KAAKa,aAArB,UACE,4CAGA,uBAAOM,KAAK,OAAOC,IAAK,SAACJ,GAAD,OAAW,EAAKA,MAAQA,KAChD,uBAAOG,KAAK,SAASJ,MAAM,kB,GAnBMM,IAAMhB,WCK1BiB,E,yKAERC,GACMvB,KAAKL,MAAb6B,KACFC,QAAQ,aAAcF,K,+BAI3B,OACE,gCACE,cAACG,EAAD,CAAapB,KAAMN,KAAKL,MAAMW,OAC9B,cAAC,EAAD,CAAaW,SAAUjB,KAAK2B,WAAW5B,KAAKC,e,GAXNqB,IAAMhB,WCE9CiB,EAAmBM,oBAAU,CAACC,MAAO,cAAlBD,CAAiCE,GAmB3CC,E,uKAfX,OACE,cAAC,YAAD,CAAWC,UAAU,+BAArB,SACE,sBAAK9B,UAAU,MAAf,UACE,cAAC,EAAD,CAAYC,KAAK,QACjB,cAAC,EAAD,CAAYA,KAAK,SAEjB,cAAC,IAAD,CAAiB8B,IAAI,kCAAkCC,MAAM,SAE7D,cAAC,EAAD,a,GAVQ7B,aCEH8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d8b9c8f9.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './HelloWorld.css';\r\n\r\nclass HelloWorld extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {greeting: 'Hello'};\r\n        this.frenchify = this.frenchify.bind(this);\r\n    }\r\n\r\n\r\n    frenchify() {\r\n        this.setState({ greeting: 'Bonjour' });\r\n    }\r\n\r\n    render(){\r\n         return (\r\n         <div className=\"HelloWorld\"> \r\n            {this.state.greeting} {this.props.name}! \r\n            <br/>\r\n            <button onClick={this.frenchify}>Frenchify!</button>\r\n         </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default HelloWorld;","import React from 'react';\r\n\r\nexport default ({data}) => {\r\n  const dataList = data.map((d) => <li>{d}</li>)\r\n  console.log(data);\r\n  return (\r\n    <div>\r\n      <h3>Messages</h3>\r\n      <ul>\r\n        {dataList}\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nexport default class MessageForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    const value = this.input.value;\r\n    this.props.onSubmit(value);\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Message\r\n        </label>\r\n        <input type=\"text\" ref={(input) => this.input = input} />\r\n        <input type=\"submit\" value=\"Submit\" />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nimport MessageList from './MessageList';\r\nimport MessageForm from './MessageForm';\r\n\r\n\r\nexport default class MessageContainer extends React.Component {\r\n\r\n  addMessage(message){\r\n    const {mqtt} = this.props;\r\n    mqtt.publish('@near/demo', message);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n        <MessageList data={this.props.data} />\r\n        <MessageForm onSubmit={this.addMessage.bind(this)} />\r\n      </div>\r\n    )\r\n\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport HelloWorld from './HelloWorld';\r\nimport ResponsiveEmbed from 'react-responsive-embed'\r\nimport { Connector } from 'react-mqtt';\r\nimport {subscribe} from 'react-mqtt';\r\nimport _MessageContainer from './MessageContainer.js';\r\n\r\nconst MessageContainer = subscribe({topic: '@near/demo'})(_MessageContainer);\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Connector mqttProps=\"ws://test.mosquitto.org:8081\">\r\n        <div className=\"App\"> \r\n          <HelloWorld name=\"jim\"/> \r\n          <HelloWorld name=\"bill\"/> \r\n\r\n          <ResponsiveEmbed src='https://obs.ninja/?view=mikebru' ratio='16:9' />\r\n\r\n          <MessageContainer/>\r\n        </div>\r\n      </Connector>\r\n      );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}